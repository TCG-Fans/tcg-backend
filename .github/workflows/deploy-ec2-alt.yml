name: Deploy to AWS EC2 (Alternative)

on:
  push:
    branches: [ main ]  # Замените на вашу основную ветку (main или master)

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Create deployment package
      run: |
        tar -czf deploy.tar.gz dist package*.json .env.example Dockerfile docker-compose.yml
        
    - name: Upload deployment package to S3
      run: |
        aws s3 cp deploy.tar.gz s3://${{ secrets.AWS_S3_BUCKET }}/deploy-${{ github.sha }}.tar.gz
        
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
        
    - name: Deploy to EC2 instance
      run: |
        # Проверка SSH-соединения
        ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "echo 'SSH connection successful!'"
        
        # Создаем директорию для деплоя
        ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "mkdir -p ~/app"
        
        # Создаем скрипт деплоя
        cat > deploy.sh << 'EOL'
        #!/bin/bash
        cd ~/app
        
        # Скачиваем архив с приложением из S3
        aws s3 cp s3://${{ secrets.AWS_S3_BUCKET }}/deploy-${{ github.sha }}.tar.gz ./deploy.tar.gz
        
        # Распаковываем архив
        tar -xzf deploy.tar.gz
        rm deploy.tar.gz
        
        # Копируем .env файл, если он существует
        if [ -f ~/.env ]; then
          cp ~/.env ./.env
        else
          cp .env.example .env
          echo "ВНИМАНИЕ: Создан .env из примера. Необходимо обновить переменные окружения!"
        fi
        
        # Проверяем, запущен ли Docker
        if ! systemctl is-active --quiet docker; then
          sudo systemctl start docker
        fi
        
        # Запускаем приложение через Docker Compose
        docker-compose down || true
        docker-compose up -d --build
        
        # Очистка старых образов
        docker image prune -af
        EOL
        
        # Копируем скрипт на сервер
        scp -i ~/.ssh/id_rsa deploy.sh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:~/deploy.sh
        
        # Делаем скрипт исполняемым и запускаем его
        ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "chmod +x ~/deploy.sh && ~/deploy.sh"
